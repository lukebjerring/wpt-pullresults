---

#########
# PROJECT
#########

# Certain tasks may operate in a less secure (but more convenient) manner, eg.
# enabling passwordless sudo or generating self-signed ssl certs, when testing
# locally, in Vagrant. But not in production!
env: production

# This var is referenced by a few other vars, eg. git_repo, hostname, site_fqdn.
project_name: wpt-pullresults

# This is what you'll see at the bash prompt if/when you ssh into your server.
hostname: "{{project_name}}"

# This is the fully qualified domain name of your production server. Because
# nginx checks this value against the URL being requested, it must be the same
# as the server's DNS name. This value is overridden for Vagrant and staging
# servers.
# site_fqdn: "{{project_name}}.com"
site_fqdn: "pulls.web-platform-tests.org"


##############
# PROVISIONING
##############

# Keys to be added to apt.
apt_keys:
  - "https://www.postgresql.org/media/keys/ACCC4CF8.asc"

# Repos to be added to apt. Useful repos:
# Git latest:     ppa:git-core/ppa
apt_repos:
  - "ppa:git-core/ppa"
  - "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"

# Any apt packages to install. Apt package versions may be specified like
# - git=2.1.0
apt_packages:
  - build-essential
  - libssl-dev
  - python-pip
  - python3
  - python3-dev
  - python3-pip
  - unattended-upgrades
  - nginx
  - git
  - libpq-dev
  - postgresql-9.6
  - postgresql-contrib-9.6
  - postgresql-client-9.6

pip2_packages:
  - psycopg2

pip3_packages:
  - pip
  - ansible
  - virtualenv
  - uwsgi
  - psycopg2


############
# WEB SERVER
############

# Should the nginx server use HTTPS instead of HTTP?
ssl: true

# If ssl is enabled, these cert/key files will be used by nginx. You will need
# to ensure these files are valid and already on the server (which you can do
# via cloud-init, scp, etc).
ssl_cert_path: /etc/ssl/cert.pem
ssl_key_path: /etc/ssl/privkey.pem

# If ssl is enabled, email address to receive notifications from letsencrypt.
letsencrypt_email: infrastructure@bocoup.com

# Use a custom parameter for stronger DHE key exchange.
dhe_param_path: /etc/ssl/certs/dhparam.pem

# Nginx dir and conf dir.
nginx_dir: /etc/nginx
conf_dir: "{{nginx_dir}}/conf.d"

# Nginx templated configuration files to create.
shared:
  - file: ssl_params.j2
    dest: "{{nginx_dir}}/ssl_params"
  - file: gzip_params.j2
    dest: "{{nginx_dir}}/gzip_params"
confs:
  - file: site.conf.j2
    dest: "{{conf_dir}}/site.conf"


#######
# USERS
#######

# Specified users will be added to the remote server, along with all specified
# public keys. Removing a user from this list does NOT remove them from the
# remote server! You need to set their state to "absent", remove all the other
# properties for that user, and re-run the "configure" playbook. Also, the
# shadow password (that user's sudo password) should be a hash, and NOT plain
# text!
#
# Generate a shadow password hash using the following command:
# openssl passwd -1 -salt $(openssl rand -base64 6) yourpassword
#
users:
  - name: bobholt
    state: present
    real_name: Bob Holt
    groups: sudo,www-data
    shadow_pass: $1$uf5pXGpc$D160EhELWfQoLFqFBAzIi0
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAp5D7Lzs+z+iAbj/BAeV3tvh91lGSl8uzKfTZp17o1Iq0Rv8n9AZOjaoud5bm4sOP9udU8w2Nt09Suf9ldKeKhWkxKCj9VcCxhjXNgTp0gkcjuuUO7nrIT4PZICFE98YISSNfWtQoPzXmS7AoxcCuGLedj9x9Nd73UodNYEKIcb4TCHf/peLm2NAP5S76W2p1FSnzzE9CGtz+CSAenKEf40GXwO6Zz6m8mgAB/UhBbJ/o5JZDqZNFW7/vYU4pW/9tqH6YZvKeYoHuEBvgg3RjFcoRp+/PQ5DXZyKX9rSgSAOKu70a3L0KU/paTv0P2nB85l5LjCaf4DYNCOWVAEOgEw== bobholt@gmail.com
  - name: jgraham
    state: present
    real_name: James Graham
    groups: sudo,www-data
    shadow_pass: $1$u8ZtS5S+$VoiH0snQQrKDESTWqrCVS.
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCv+Vv5+pW5DBlNMRlKk4YrEHMbVIvFcaukpwaK2fkfW3qftG+QlpANlTKKhL5Ay/vChnlH/ww0ahxQaS2FIzkKrsvkp9L0fFXMEAdAWaXZ2lWZtpy8npV/rNluL+d1AkV/Xe3+Zz4BGO2VWBaxoH7vbcHqxuGczXc4OvcZVrAlc0QsWUhmFGPJkF3DFtWVB5dd54M5JqeyKBNYxT8CnWt7VtI8b2zzHtNrFod6DXMCtCU7WlQUGynqfxWSv+uqp3SMCbl94CgyQe3QsTri8Q1rsHvzdJEHulhHWc3ZXECSC/+/9xtlbW/tfTTA26FrjiVDGKF5Npt9m5Ku+HVp6t93 james@ginny
  - name: mike
    state: present
    real_name: Michael[tm] Smith
    groups: sudo,www-data
    shadow_pass: $1$exlnj24t$RAvjY2xheyM869dIyPOiE0
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCd6sJOl6gxcN050TZTo8OxuU84Xom+cmxuj3vsmtF+fAt22x1OZQ7gBZET4mqeEDjzZpyzjRzmmvv4QfDFbKgDlvy1uDE2jISPMftT1nk8a/+VDG/MuMQHpd2qddO3biPwcXLl/KpeegdFOUXyFO3Ez5Royu9k9WF/1Fda+MH8Sf5v9BuByFK7xJ4qo2GRzkaN0PzKCRn2T+fOYAX/VPHymocyW/E3Ykzj3qRHCHNxHOrjf31xFpIab4Si2aGb87OutilcmdV5bH8Ru/iP9ZdS7jcY/s5ZSs40YzV8i6wQoIcPo4GCmwK9EgHK4q+VtxT0oPqyWalFX0JOP9ajjNXPWvaVGQGm6ALmtoVwiy9kBimpKrqPxK4jIIKyGkhpIJPrYwa8oOKiWEolMRj2UoMlCQHjP9KZ7phQoxQM6HgFDLu9WpCGilOc0UIHUkuwPJTxbjb9wqmsztcbrLlSsuuCCNYP8Kan1W3wv0g8nLhifRlv6/4iggmdBjL4eIJfSyAFm/HSm81cNsjkadiHeNY3ezSvJYzhNuEbdO5YclUg3GLQbrJOumawqLkU2qulLC5DM+GxbNQxDQBNCT5RFWdsByQy8LRD5Jnp/jA1wv+Wg8Y+MDTQgR0It29QWvihDlVM9cLclH0CARAp06IMUujHpbWbb3YfBy1PwgKiHrq79w== mike@w3.org
  - name: gsnedders
    state: present
    real_name: Geoffrey Sneddon
    groups: sudo,www-data
    shadow_pass: $1$F2ytFVcy$mldf2yoIQvebhRN3yQNZe.
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDa6npzFmuiuVRPfmMZ3jBUgugY8qU0boXWU7FYwZ0Sw4cPyXZoes5+tqBmSFp6+Uof1sTkpAmpJP+10mACa/lTRkeEPYBNvKvdJT0CUsTi4dlN2gIHaGKHzRFOROZVC6OyfmqrlD4oD46Dp7UARVI8puBhGCMDQ4NXQZuEj/1JW1QsWBgP+4DCvg5tYfcwzU5IX3ASfbwt8Xf8BneNpbVeNVV5O2hC2FCIGNtP8BcLIypKLXKGHPgkaVRCtEFTqTn3Gm9PPqQiXyYiP34sLIdvSEvqOvrfLb1HP3YW4KaI1WtW7sJ5kwwfYcQoEvw+Bqownn8ItUxQQC7gbptC/EOUOXBF9kDFCF0ygixJ6DV3v1oMy5qwOWvbWSTiXDo02JNJhxRAWCpaonDBWFP2XuK+K5KX+G3DLtmQAfa2UE9xfTsuTaFl4iHq+d6NeBsNFCJA2wUapCgxWS5BPFecky684VfoH3elNzDDmpSHV2HusbtR5ZYLSG6ifM+rZtOyCqFcMBIzf4sYK2HFDXH3KCzX1jKJS7ujbrmys6Cv7WT3gL5JJC97Jl6saTE9g8urkt3jvITurLsUyZWY8mTZRg7niypcyu7TOHfzafwcGO0qrajlSNWwOWyrmjOfJRI5ksUW9oEDbOXRX4qQDzcZ6vwIBIotn1KOPGWhBtEjwSSQkQ== pnin
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCoM4MQG4+WFf7etgNlLLnx3OblQwy9FaTuXiyAEA2l2mTtZzQgV8vCuglxerahjGGoAmvqJrjKTBVTG04/nDYG/6SrPO/C+Cxr8EtgiKzWmMibYl5cR+8yrVkKjLtlyyRbZu3ZI/W1qGhY8YAPoZaNiXxC2UoV1wD+1ZbEvP1nb2uuEPYxLjDqC7Jjt39ia6al/XA4Ty4D3rd0n2TJ/AxjWTvbe/cw6w4e+URKcRqEvfrAcD2dKqIgR4C5FQog/yrQq+NQR3iFCVotXMg+E8QwNdA3C54jxi7OZXdQmv1IIgESQqjrMbClf3nF2TnceAUFlctspF9v8bLgMKyDK3oWu4ceX6DS4OL14e8KzadQAoanMofZY1f86trlXpugBBbPwz2rRRnp/+1pn/8HAKrnEaVeoaesV8Z8n6xqG2cnCzUKfIFPd6w4TWkI9sG481pkIUibA0RHvzF8m4T4d84Mn/dRDW9/wczzPAoQ+w4cgjMlT4TdxE79XYfa9oYCraR12wtTGV1cn+r+b6Y6bjPiCwFoDD1HvkFab/kv42WuIjNCednIxmZ2jxWP4fN/Eskpr9pk6q+qm/PVmRsYDf2FjykVnX8SIvoVxH87Tk4AdDTDDC6CSWsFLo2sam3xpppbOmbKZ+WxSyNMlW2jQt9PGGepUtZYnfEuL9d2dsAUbQ== vanveen
  - name: lukebjerring
    state: present
    real_name: Luke Bjerring
    groups: sudo,www-data
    shadow_pass: $1$opR6AvEl$E2pQJH78DSFDCpcieNZuG.
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrxk7Y0JdC58bgfWA7PaAtbStCz9Ttv9pct2a/7ZgyiT1ivtXcEKnoM/VVNWcRiVEk3Q1DZmQALzyzf+S4yZiIeecubH9rv5PfVTZIKV8I1g7PQ8eftG2+48TgBNXwRtHZyhputD5aQTGynGjoIXl7NR6D1np+cGDbxzyD03rS58dijZjxwjH7va+2NRj9dZdLVKO7nAoTLQiPPsh3ybZzuwoQPtTNADfZ/TxX6Cr1i8pshiMR0YTcvCRFBoGnBUq9+m8gTgw+q4VLbPublK+AkeWLsZWHwbqe6n0ozAGfzqvBKTgKbsFOlZmLd5/mJd9JbN/IXVP7QfrVcoQ85VlV lukebjerring
########
# DEPLOY
########

# Parent directory for cloned repository directories. The clone_path and
# site_path should be children of this directory.
base_path: "/var/www/{{project_name}}"

# Temporary location where the Git repo will be cloned and the build scripts
# will be run before going live.
clone_path: "{{base_path}}/temp"

# Where the production site symlink will exist.
site_path: "{{base_path}}/site"

# If defined, only this many of the most recent clone directories (including the
# current specified commit) will be retained. Anything older will be removed,
# once the current clone has been made live.
keep_n_most_recent: 3

# If this variable is defined, a file containing build information, including
# the timestamp, commit, sha, and a few other useful values will be generated
# after the build has completed. This file is relative to your project root.
build_info_path: "wptdash/static/build.txt"

# If these variables are uncommented, add swap space to the machine when the
# configure playbook is run. The swap configuration controlled by this is
# meant to address installation problems on machines with minimal ram (e.g.
# npm bails during install because it runs out of memory)
#swap_file_path: /swap
#swap_file_size: 2GB


###################
# DEPLOY EXTRA VARS
###################

# Specify any valid remote (typically a github user)
remote: lukebjerring

# Specify any ref (eg. branch, tag, SHA) to be deployed. This ref must be
# pushed to the remote git_repo before it can be deployed.
commit: master

# Git repo address.
# For private repositories: git@github.com:{{remote}}/{{project_name}}.git
# For public: https://github.com/{{remote}}/{{project_name}}
git_repo: https://github.com/{{remote}}/{{project_name}}

# Uncomment this if if you are checking out a private repo
# ansible_ssh_common_args: -o ForwardAgent=yes

# Clone and build the specified commit SHA, regardless of prior build status.
force: false

# Use the local project Git repo instead of the remote git_repo. This option
# only works with the vagrant inventory, and not with staging or production.
local: false


###########################
# APPLICATION CONFIGURATION
###########################

#nonsensitive data
db_name: wptdash
db_user: wptdash
github_org: lukebjerring
github_repo: web-platform-tests
github_commenter: lukebjerring

#sensitive data
db_password: "{{ vault_db_password }}"
github_commenter_token: "{{ vault_github_commenter_token }}"
github_webhook_token: "{{ vault_github_webhook_token }}"
